# Required permissions, for service account:
# 1. artifact registery admin
# 2. cloud run admin 
# 3. cloud storage bucket admin 
# 4. Cloud build admin 
# 5. Service account user.
# Enable cloud build API 
# Enable cloud artifact registery api. 
# Enable compute engine API
# Give your defult account, and give it access to the service account as a 
# Cloud Run Service Agent and Cloud Build Service Agent
# 
name: Deploy to Cloud Run from Source

on:
  # Pipeline can be run through github UI in the actions tab.
  workflow_dispatch:
  # push:

    # Runs on pushes. 
    # branches: [ "main" ]
env:
  PROJECT_ID: video-generation-404817 # TODO: update Google Cloud project id
  # SERVICE: predict-ser # TODO: update Cloud Run service name
  SERVICE: upload-to-youtube # Changing to a new service for dev. 
  REGION: us-central1 # TODO: update Cloud Run service region

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    timeout-minutes: 30 

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # NOTE: Alternative option - authentication via credentials json

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Setup environment variable from secret
        run: echo "GCP_CREDENTIALS=$GCP_CREDENTIALS" >> $GITHUB_ENV
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If required, update to the appropriate source folder
          env_vars: GCP_CREDENTIALS=${{ secrets.GCP_CREDENTIALS }}, OAUTH2_JSON=${{ secrets.OAUTH2_JSON }} 
          source: ./

      - name: Update Cloud Run Memory
        run: |
          gcloud run services update ${{ env.SERVICE }} --memory 4Gi --region ${{ env.REGION }} --platform managed
        env:
          GCLOUD_PROJECT: ${{ env.PROJECT_ID }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
